import os
import pandas as pd
from datetime import datetime
from dateutil.relativedelta import relativedelta
import locale

# === CONFIGURACIÓN ===
base_paths = {
    "DEV": r"..\DEV\Output\Log",
    "UAT": r"..\UAT\Output\Log",
    "PROD": r"..\PROD\Output\Log"
}

# Idioma de meses en español
locale.setlocale(locale.LC_TIME, "es_ES.UTF-8")  # Linux/Mac
# locale.setlocale(locale.LC_TIME, "Spanish_Spain")  # Windows (descomentar si usas Windows)

# Número de meses a incluir (ejemplo: 3 = mes actual y 2 anteriores)
num_meses = 3

# Carpeta de salida
output_dir = r"C:\Logs-Reporttoken"
os.makedirs(output_dir, exist_ok=True)

# Encabezados esperados
headers = [
    "Entorno","FECHA","ProgramID","TaskID","MessageID","MSISDN","OperatorID","MOContent1",
    "ContentType","CreatedOn","Cell Number","CIS","FECHA DE NACIMIENTO","TIPO DE CAMPAÑA",
    "FECHA DE TRABAJO","ESTATUS","DETALLES"
]

# === PROCESO ===
df_final = pd.DataFrame(columns=headers)
now = datetime.now()

# Lista de meses a procesar en español y mayúsculas
meses_a_incluir = []
for i in range(num_meses):
    fecha_mes = now - relativedelta(months=i)
    meses_a_incluir.append((fecha_mes.strftime("%Y"), fecha_mes.strftime("%B").upper()))

print(f"Procesando meses: {meses_a_incluir}")

for entorno, base_path in base_paths.items():
    for year, month in meses_a_incluir:
        file_path = os.path.join(base_path, year, month, "log.csv")
        
        if os.path.exists(file_path):
            try:
                # Leer CSV con primeras 16 columnas
                df = pd.read_csv(file_path, encoding="latin1", usecols=range(16), on_bad_lines="skip")
                
                # Insertar columna de entorno
                df.insert(0, "Entorno", entorno)
                
                # Asegurar encabezados correctos
                df.columns = headers
                
                # Concatenar al DataFrame final
                df_final = pd.concat([df_final, df], ignore_index=True)
                print(f"✔ Procesado: {file_path}")
            except Exception as e:
                print(f"⚠ Error leyendo {file_path}: {e}")
        else:
            print(f"❌ No existe: {file_path}")

# Nombre dinámico del archivo con rango de meses
meses_texto = "-".join([m for _, m in meses_a_incluir[::-1]])  # Ej: JULIO-AGOSTO-SEPTIEMBRE
output_file = os.path.join(output_dir, f"log-consentrado-{meses_texto}.csv")

# Guardar CSV final (sobrescribe si ya existe)
df_final.to_csv(output_file, index=False, encoding="utf-8-sig")
print(f"\n✅ Archivo concentrado generado en: {output_file}")
