import re
from pathlib import Path
import urllib.parse
import shutil

# Configuraci√≥n actualizada con tus rutas
CARPETA_HTML = Path(r"C:\Users\45056372\Desktop\prueba its")
CARPETA_SALIDA = Path(r"C:\Users\45056372\Desktop\prueba its\salida")
URL_SHAREPOINT = "https://tubanco.sharepoint.com/sites/misitio/Documentos%20compartidos/Carpeta/"

# Crear carpeta de salida
CARPETA_SALIDA.mkdir(parents=True, exist_ok=True)

def procesar_html(html_path):
    """Procesa el HTML cambiando solo enlaces .htm/.html a .pdf"""
    with open(html_path, 'r', encoding='utf-8', errors='ignore') as f:
        contenido = f.read()
    
    # Funci√≥n para convertir enlaces .htm/.html a .pdf
    def convertir_enlace(match):
        nombre_archivo = match.group(1)
        nombre_base = Path(nombre_archivo).stem  # Obtener nombre sin extensi√≥n
        return f'href="{URL_SHAREPOINT}{urllib.parse.quote(nombre_base)}.pdf"'
    
    # Actualizar solo enlaces que terminen en .htm o .html
    contenido = re.sub(
        r'href=["\']([^"\']*\.htm[l]?)["\']',
        convertir_enlace,
        contenido,
        flags=re.IGNORECASE
    )
    
    return contenido

def copiar_estructura_completa(html_path, output_dir):
    """Copia el archivo HTML y toda su estructura adjunta"""
    # Copiar archivo principal
    shutil.copy2(html_path, output_dir)
    
    # Copiar carpeta _archivos si existe
    html_name = html_path.stem
    carpeta_archivos = html_path.parent / f"{html_name}_archivos"
    
    if carpeta_archivos.exists():
        dest_dir = output_dir / f"{html_name}_archivos"
        shutil.copytree(carpeta_archivos, dest_dir, dirs_exist_ok=True)

# Proceso principal
print("Iniciando conversi√≥n de enlaces .htm/.html a .pdf...")

for html_file in CARPETA_HTML.glob("*.[hH][tT][mM]*"):
    if html_file.is_file():  # Procesar solo archivos (no directorios)
        print(f"\n‚óè Procesando: {html_file.name}")
        
        try:
            # Procesar HTML (solo enlaces)
            contenido = procesar_html(html_file)
            
            # Guardar archivo modificado
            output_html = CARPETA_SALIDA / html_file.name
            output_html.write_text(contenido, encoding='utf-8')
            
            # Copiar estructura adjunta (carpetas _archivos)
            copiar_estructura_completa(html_file, CARPETA_SALIDA)
            
            print(f"  ‚úÖ Archivo procesado: {html_file.name}")
            
            # Mostrar ejemplo de enlace modificado (para verificaci√≥n)
            enlaces_modificados = re.findall(r'href=["\'][^"\']*\.pdf["\']', contenido)
            if enlaces_modificados:
                print(f"  üîó Enlace modificado: {enlaces_modificados[0][:60]}...")
            
        except Exception as e:
            print(f"  ‚ùå Error procesando {html_file.name}: {str(e)}")

print("\n‚úî Proceso completado. Resultados en:", CARPETA_SALIDA)
