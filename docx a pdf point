import re
from pathlib import Path
import shutil
import os

# Configuraci√≥n actualizada
CARPETA_HTML = Path(r"C:\Users\45056372\Desktop\prueba its")
CARPETA_SALIDA = Path(r"C:\Users\45056372\Desktop\prueba its\salida")
URL_SHAREPOINT = "https://tubanco.sharepoint.com/sites/misitio/Documentos%20compartidos/Carpeta/"

# Crear carpeta de salida
CARPETA_SALIDA.mkdir(parents=True, exist_ok=True)

def procesar_html(html_path):
    """Procesa el HTML manteniendo rutas relativas de im√°genes"""
    with open(html_path, 'r', encoding='utf-8', errors='ignore') as f:
        contenido = f.read()
    
    # 1. Actualizar enlaces .htm/.html a PDFs en SharePoint (versi√≥n corregida)
    def actualizar_enlaces(match):
        nombre_archivo = match.group(1)
        nombre_base = os.path.splitext(nombre_archivo)[0]
        return f'href="{URL_SHAREPOINT}{nombre_base}.pdf"'
    
    contenido = re.sub(
        r'href=["\']([^"\']*\.htm[l]?)["\']',
        actualizar_enlaces,
        contenido,
        flags=re.IGNORECASE
    )
    
    # 2. Normalizar rutas de im√°genes en _archivos (versi√≥n corregida sin error de backslash)
    def normalizar_rutas_imagen(match):
        comilla = match.group(1)
        ruta_imagen = match.group(2)
        ruta_normalizada = ruta_imagen.replace("\\", "/")
        return f'src={comilla}{ruta_normalizada}{comilla}'
    
    contenido = re.sub(
        r'src=(["\'])([^"\']*_archivos[\\/][^"\']*\.(?:jpe?g|png|gif|bmp|svg|webp|ico))\1',
        normalizar_rutas_imagen,
        contenido,
        flags=re.IGNORECASE
    )
    
    return contenido

def copiar_estructura_completa(html_path, output_dir):
    """Copia el archivo HTML y toda su estructura de _archivos"""
    # Copiar archivo principal
    shutil.copy2(html_path, output_dir)
    
    # Copiar carpeta _archivos manteniendo estructura
    html_name = html_path.stem
    carpeta_archivos = html_path.parent / f"{html_name}_archivos"
    
    if carpeta_archivos.exists():
        dest_dir = output_dir / f"{html_name}_archivos"
        shutil.copytree(carpeta_archivos, dest_dir, dirs_exist_ok=True)
        print(f"  üìÇ Carpeta copiada: {dest_dir.name}")

# Proceso principal
print("Iniciando procesamiento de archivos HTM...")

for html_file in CARPETA_HTML.glob("*.htm*"):
    if html_file.is_file() and '_archivos' not in str(html_file.parent):
        print(f"\n‚óè Procesando: {html_file.name}")
        
        try:
            # Procesar HTML
            contenido = procesar_html(html_file)
            
            # Guardar archivo modificado
            output_html = CARPETA_SALIDA / html_file.name
            output_html.write_text(contenido, encoding='utf-8')
            
            # Copiar estructura completa
            copiar_estructura_completa(html_file, CARPETA_SALIDA)
            
            print(f"  ‚úÖ Archivo procesado: {html_file.name}")
            print(f"  üîó Ejemplo de enlace modificado: {re.findall(r'href=["\'][^"\']*\.pdf["\']', contenido)[0][:50]}...")
        except Exception as e:
            print(f"  ‚ùå Error procesando {html_file.name}: {str(e)}")

print("\n‚úî Proceso completado exitosamente.")
print(f"Directorio de salida: {CARPETA_SALIDA}")
