import re
from pathlib import Path
import urllib.parse
import shutil
import os

# Configuración
CARPETA_HTML = Path(r"C:\Users\45056372\Desktop\prueba its")
CARPETA_SALIDA = Path(r"C:\Users\45056372\Desktop\prueba its\salida")
URL_SHAREPOINT = "https://tubanco.sharepoint.com/sites/misitio/Documentos%20compartidos/Carpeta/"

# Crear carpeta de salida
CARPETA_SALIDA.mkdir(parents=True, exist_ok=True)

def preservar_acentos(texto):
    """Codifica URLS pero preserva acentos y caracteres especiales"""
    # Primero codificar los caracteres especiales que necesitan codificación
    texto_codificado = urllib.parse.quote(texto, safe='áéíóúÁÉÍÓÚñÑüÜ')
    # Luego decodificar los caracteres que queremos mantener legibles
    return texto_codificado.replace('%C3%A1', 'á').replace('%C3%A9', 'é').replace('%C3%AD', 'í')\
                         .replace('%C3%B3', 'ó').replace('%C3%BA', 'ú').replace('%C3%81', 'Á')\
                         .replace('%C3%89', 'É').replace('%C3%8D', 'Í').replace('%C3%93', 'Ó')\
                         .replace('%C3%9A', 'Ú').replace('%C3%B1', 'ñ').replace('%C3%91', 'Ñ')\
                         .replace('%C3%BC', 'ü').replace('%C3%9C', 'Ü')

def procesar_html(html_path):
    """Procesa el HTML conservando acentos y convirtiendo enlaces"""
    # Leer conservando encoding original
    with open(html_path, 'r', encoding='utf-8') as f:
        contenido = f.read()
    
    # Función para convertir enlaces conservando acentos
    def convertir_enlace(match):
        comilla = match.group(1)
        nombre_archivo = match.group(2)
        nombre_base = os.path.splitext(nombre_archivo)[0]
        nombre_seguro = preservar_acentos(nombre_base)
        return f'href={comilla}{URL_SHAREPOINT}{nombre_seguro}.pdf{comilla}'
    
    # Convertir enlaces .htm/.html a .pdf
    contenido = re.sub(
        r'href=(["\'])([^"\']*\.htm[l]?)(["\'])',
        convertir_enlace,
        contenido,
        flags=re.IGNORECASE
    )
    
    return contenido

def copiar_estructura(html_path, output_dir):
    """Copia el archivo y su estructura adjunta"""
    # Copiar archivo principal
    shutil.copy2(html_path, output_dir)
    
    # Copiar carpeta _archivos si existe
    html_name = html_path.stem
    carpeta_archivos = html_path.parent / f"{html_name}_archivos"
    
    if carpeta_archivos.exists():
        dest_dir = output_dir / f"{html_name}_archivos"
        shutil.copytree(carpeta_archivos, dest_dir, dirs_exist_ok=True)

# Proceso principal
print("Iniciando conversión conservando acentos...")

for html_file in CARPETA_HTML.glob("*.[hH][tT][mM]*"):
    if html_file.is_file() and '_archivos' not in str(html_file.parent):
        print(f"\n● Procesando: {html_file.name}")
        
        try:
            # Paso 1: Procesar conservando acentos
            contenido = procesar_html(html_file)
            
            # Paso 2: Guardar con encoding UTF-8
            output_path = CARPETA_SALIDA / html_file.name
            with open(output_path, 'w', encoding='utf-8') as f:
                f.write(contenido)
            
            # Paso 3: Copiar estructura adjunta
            copiar_estructura(html_file, CARPETA_SALIDA)
            
            # Mostrar ejemplo
            ejemplo = re.search(r'href=["\'][^"\']*á[^"\']*\.pdf["\']', contenido)
            if ejemplo:
                print(f"  ✅ Enlace con acento modificado: {ejemplo.group()[:60]}...")
            else:
                print("  ✅ Archivo procesado (sin acentos detectados)")
                
        except Exception as e:
            print(f"  ❌ Error procesando {html_file.name}: {str(e)}")

print("\n✔ Proceso completado. Archivos en:", CARPETA_SALIDA)
